apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:12-alpine
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: whalestream-api-secret
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: whalestream-api-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: whalestream-api-secret
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-data
        persistentVolumeClaim:
          claimName: postgres-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: bitnami/redis:5.0.6
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: whalestream-api-secret
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-data
          mountPath: /bitnami/redis/data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jackett
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jackett
  template:
    metadata:
      labels:
        app: jackett
    spec:
      containers:
      - name: jackett
        image: linuxserver/jackett
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: whalestream-api-config
              key: TZ
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: jackett-config-pvc
      - name: downloads
        persistentVolumeClaim:
          claimName: jackett-downloads-pvc

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaresolverr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flaresolverr
  template:
    metadata:
      labels:
        app: flaresolverr
    spec:
      containers:
      - name: flaresolverr
        image: ghcr.io/flaresolverr/flaresolverr:latest
        env:
        - name: LOG_LEVEL
          value: "info"